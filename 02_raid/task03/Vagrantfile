# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
    :m2t3 => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.101',
	    :disks => {
	    	:sata1 => {
	    		:dfile => './sata1.vdi',
	    		:size => 5000,
	    		:port => 1
	    	},
	    	:sata2 => {
                :dfile => './sata2.vdi',
                :size => 5000, # Megabytes
	    		:port => 2
	    	}
	    }
    },
}

Vagrant.configure("2") do |config|
    # проверка отключения плагина для ускорения сборки на ноуте 
    if Vagrant.has_plugin?("vagrant-vbguest")
        config.vbguest.auto_update = false
    end
    
    MACHINES.each do |boxname, boxconfig|

        config.vm.define boxname do |box|

            box.vm.box = boxconfig[:box_name]
            box.vm.host_name = boxname.to_s 
            #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset
            box.vm.synced_folder ".", "/vagrant", disabled: true    
            box.vm.network "private_network", ip: boxconfig[:ip_addr]   
            box.vm.provider :virtualbox do |vb|
              	vb.customize ["modifyvm", :id, "--memory", "1024"]
                    needsController = false
		    boxconfig[:disks].each do |dname, dconf|
	    	    unless File.exist?(dconf[:dfile])
	    		    vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                        needsController =  true
                end 
		    end
                if needsController == true
                    vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                    boxconfig[:disks].each do |dname, dconf|
                        vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                    end
                end
            end
 	        box.vm.provision "shell", inline: <<-SHELL
	            mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
	            yum install -y mdadm smartmontools hdparm gdisk
            SHELL

            box.vm.provision "partitions", after: "shell", type: "shell" do |s|
                s.inline = <<-SHELL
                    for i in {b,c}; do
                        parted -s /dev/sd$i mklabel gpt
                        parted /dev/sd$i mkpart primary 0 1MiB
                        parted /dev/sd$i set 1 bios_grub on
                        parted /dev/sd$i name 1 grub
                        parted /dev/sd$i mkpart primary 1MiB 50MiB
                        #parted /dev/sd$i set 2 boot on
                        parted /dev/sd$i name 2 boot
                        parted /dev/sd$i mkpart primary 50MiB 100%
                        parted /dev/sd$i name 3 rootfs;
                    done
                SHELL
            end

            box.vm.provision "raid", after: "partitions", type: "shell" do |s|
                s.inline = <<-SHELL
                    mdadm --zero-superblock --force /dev/sd{b,c}{1..3}
                    yes | mdadm --create /dev/md0 --force -l 1 -n 2 /dev/sd{b,c}3
                    mkdir /etc/mdadm/
                    echo "DEVICE partitions" > /etc/mdadm/mdadm.conf
                    mdadm --detail --scan --verbose | awk "/ARRAY/{print}" >> /etc/mdadm/mdadm.conf
                SHELL
            end

            box.vm.provision "sync", after: "raid", type: "shell" do |s|
                s.inline = <<-SHELL
                    parted -s /dev/md0 mklabel gpt
                    mkfs.ext4 /dev/md0
                    mount /dev/md0 /mnt
                    rsync -aAXv --exclude={"/dev/*","/proc/*","/sys/*","/tmp/*","/run/*","/mnt/*","/swapfile","/boot/*"} / /mnt/
                SHELL
            end
        end
    end
end


